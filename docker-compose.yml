services:
  # Reverse Proxy - Caddy with automatic HTTPS
  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"  # HTTP/3
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - eppur-network
    restart: unless-stopped
    depends_on:
      - web
      - api
      - directus

  # Frontend - Next.js Application
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    image: eppur-si-muove-web:latest
    expose:
      - "3000"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=https://api.localhost
      - NEXT_PUBLIC_DIRECTUS_URL=https://cms.localhost
    depends_on:
      - api
      - directus
    networks:
      - eppur-network
    restart: unless-stopped

  # Backend - FastAPI Service
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    image: eppur-si-muove-api:latest
    expose:
      - "8000"
    volumes:
      - ./apps/api:/app
      - ./migrate/models:/app/models  # Mount models directory
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DIRECTUS_URL=http://directus:8055
      - CORS_ORIGINS=https://app.localhost,https://cms.localhost
    networks:
      - eppur-network
    restart: unless-stopped

  # CMS - Directus
  directus:
    image: directus/directus:latest
    expose:
      - "8055"
    volumes:
      - directus_uploads:/directus/uploads
      - directus_extensions:/directus/extensions
    environment:
      # Security
      KEY: '${DIRECTUS_KEY:-replace-with-random-value}'
      SECRET: '${DIRECTUS_SECRET:-replace-with-random-value}'
      
      # Admin User
      ADMIN_EMAIL: '${DIRECTUS_ADMIN_EMAIL:-admin@example.com}'
      ADMIN_PASSWORD: '${DIRECTUS_ADMIN_PASSWORD:-d1r3ctu5}'
      
      # Database
      DB_CLIENT: 'pg'
      DB_HOST: 'postgres'
      DB_PORT: '5432'
      DB_DATABASE: '${DIRECTUS_DB_NAME:-directus}'
      DB_USER: '${DIRECTUS_DB_USER:-directus}'
      DB_PASSWORD: '${DIRECTUS_DB_PASSWORD:-directus}'
      
      # Cache
      CACHE_ENABLED: '${DIRECTUS_CACHE_ENABLED:-true}'
      CACHE_AUTO_PURGE: '${DIRECTUS_CACHE_AUTO_PURGE:-true}'
      CACHE_STORE: 'redis'
      REDIS: 'redis://redis:6379'
      
      # WebSockets
      WEBSOCKETS_ENABLED: '${DIRECTUS_WEBSOCKETS_ENABLED:-true}'
      
      # CORS
      CORS_ENABLED: '${DIRECTUS_CORS_ENABLED:-true}'
      CORS_ORIGIN: '${DIRECTUS_CORS_ORIGIN:-https://app.localhost,https://api.localhost}'
      
      # URLs
      PUBLIC_URL: '${DIRECTUS_PUBLIC_URL:-https://cms.localhost}'
      
      # Cookies
      REFRESH_TOKEN_COOKIE_SECURE: '${DIRECTUS_REFRESH_TOKEN_COOKIE_SECURE:-true}'
      REFRESH_TOKEN_COOKIE_SAME_SITE: '${DIRECTUS_REFRESH_TOKEN_COOKIE_SAME_SITE:-lax}'
      REFRESH_TOKEN_COOKIE_DOMAIN: '${DIRECTUS_REFRESH_TOKEN_COOKIE_DOMAIN:-.localhost}'
      SESSION_COOKIE_SECURE: '${DIRECTUS_SESSION_COOKIE_SECURE:-true}'
      SESSION_COOKIE_SAME_SITE: '${DIRECTUS_SESSION_COOKIE_SAME_SITE:-lax}'
      SESSION_COOKIE_DOMAIN: '${DIRECTUS_SESSION_COOKIE_DOMAIN:-.localhost}'
      
      # Extensions
      EXTENSIONS_PATH: '${DIRECTUS_EXTENSIONS_PATH:-./extensions}'
      EXTENSIONS_AUTO_RELOAD: '${DIRECTUS_EXTENSIONS_AUTO_RELOAD:-true}'
      
      # Content Security Policy
      CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_SRC: '${DIRECTUS_CSP_FRAME_SRC:-https://app.localhost,https://api.localhost}'
      
      # Logging
      LOG_LEVEL: '${DIRECTUS_LOG_LEVEL:-info}'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - eppur-network
    restart: unless-stopped

  # Database - PostgreSQL
  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: '${DIRECTUS_DB_NAME:-directus}'
      POSTGRES_USER: '${DIRECTUS_DB_USER:-directus}'
      POSTGRES_PASSWORD: '${DIRECTUS_DB_PASSWORD:-directus}'
    networks:
      - eppur-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U directus"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache - Redis
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - eppur-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  directus_uploads:
  directus_extensions:
  caddy_data:
  caddy_config:

networks:
  eppur-network:
    driver: bridge
